---
import ThemeSwitcher from '@/components/theme-switcher.astro'
import LangSwitcher from '@/components/lang-switcher.astro'

interface Props {
  id?: string
  class?: string
}

const { class: className, ...rest } = Astro.props

const navigationData: Array<{
  title: string
  route: string
}> = [
  { title: 'Home', route: '/' },
  { title: 'Resume', route: '/resume' }
]
---

<nav class:list={['menu', 'menu-closed', className]} {...rest}>
  <ul class="list">
    {
      navigationData.map(({ title, route }) => (
        <li class="item">
          <a class="link" href={route}>
            {title}
          </a>
        </li>
      ))
    }
  </ul>

  <LangSwitcher />
  <ThemeSwitcher />
</nav>

<style>
  @import '../styles/media.css';
  @import '../styles/mixins.css';

  .menu {
    display: none;
    grid-template-rows: auto repeat(2, min-content);
    gap: 1rem;
    position: fixed;
    background: var(--c-menu-bg);
    inset-block: var(--header-height) 0;
    left: 0px;
    padding: 16px var(--page-padding-x);
    width: 100%;
    justify-items: center;
    overflow-y: scroll;
  }

  .menu-opened {
    display: grid;
  }

  .menu-closed {
    display: none;
  }

  .list {
    display: flex;
    justify-content: center;
    flex-direction: column;
    list-style-type: none;
    align-items: center;
    gap: 0.5rem;
    margin: 0;
    padding: 0;
  }

  .item {
    padding: 0.25rem;
  }

  .link {
    @mixin focus;

    display: inline-flex;
    padding: 0.5rem;
    text-decoration: none;
    color: var(--c-menu-link-text);
    background: var(--c-menu-link-bg);
    border-radius: 5px;
    transition:
      background-color var(--link-hover-duration),
      color var(--link-hover-duration);

    @media (hover: hover) {
      &:hover {
        background: var(--c-menu-link-bg-hover);
        color: var(--c-menu-link-text-hover);
      }
    }
  }

  @media (--viewport-small) {
    .list {
      flex-direction: row;
      justify-self: start;
    }

    .menu {
      display: grid;
      grid-template-columns: auto repeat(2, min-content);
      grid-template-rows: unset;
      align-items: center;
      position: static;
      background: transparent;
      padding: 0;
    }

    .hamburger {
      display: none;
    }
  }
</style>
